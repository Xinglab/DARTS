paste0('RNAseq Unch. n=', length(neg.ctr.val)),
paste0('Predicted Diff. n=', length(pos.can.val)),
paste0('RNAseq Diff. n=', length(pos.ctr.val))) ) +
theme(legend.position=c(1,0), legend.justification=c(1,0)) +
xlab('RASL |dPSI|') + ylab('Cumulative Density')
pos.can.df = dmm[pos.can.idx,]
pos.can.df = merge(info.df, pos.can.df, by='ID')
neg.can.df = dmm[neg.can.idx,]
neg.can.df = merge(info.df, neg.can.df, by='ID')
return(list(fig=fig, pos.can.df=pos.can.df, neg.can.df=neg.can.df))
}
plot_rc_filter = function(darts_fn='darts_out.PC3E-GS689.txt')
{
par(mfrow=c(2,2))
for(rc_filter in c(0, 5, 10, 15)) {
rasl.df = read_rasl(rc_filter=rc_filter)
darts = read_darts(rasl.df, rc_filter, darts_fn=darts_fn, cutoff=0.4)
}
}
rc_filter = 10
meandiff_cutoff = 0.3
min_inclevel = 0
rasl.df = read_rasl(rc_filter=rc_filter)
#pdf( paste0('plots/correlation-rc_filter', rc_filter, ".pdf"),  width=4, height=4)
darts = read_darts(rasl.df, rc_filter, darts_fn='darts_out.PC3E-GS689.txt', meandiff_cutoff=meandiff_cutoff, min_inclevel=min_inclevel)
#dev.off()
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.96, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.975, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.98, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.9, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.9, min_inclevel=min_inclevel)
res$fig
plot_candidates = function(dmm, info.df, p, fpr=0.8, fpr2=0.1, min_inclevel=0.1)
{
pos.ctr.val = dmm$AbsMeanDiff[ which(dmm$Posterior_flat>0.9 & abs(dmm$IncLevelDiff)>=min_inclevel) ]
pos.ctr = ecdf(pos.ctr.val)
neg.ctr.val = dmm$AbsMeanDiff[ which(dmm$Posterior_flat<0.1) ]
neg.ctr = ecdf(neg.ctr.val)
#q.pos = quantile(p$Prior[p$Posterior_flat<0.1], p=fpr)
q.pos = quantile(dmm$Prior[dmm$Posterior_flat<=0.1], p=fpr)
q.neg = quantile(dmm$Prior[dmm$Posterior_flat<=0.1], p=fpr2)
print(q.pos)
pos.can.idx = which(
dmm$Prior >  q.pos &
abs(dmm$IncLevelDiff)>= min_inclevel&
dmm$Posterior_flat<0.9 &
dmm$Posterior_flat>0.1 )
pos.can.val = dmm$AbsMeanDiff[ pos.can.idx ]
neg.can.idx = which(
#dmm$Prior <= q.pos &
dmm$Prior <= q.neg &
abs(dmm$IncLevelDiff)>= min_inclevel &
dmm$Posterior_flat<0.9 &
dmm$Posterior_flat>0.1)
neg.can.val = dmm$AbsMeanDiff[ neg.can.idx ]
# reproducing number in manus.
test = wilcox.test(neg.can.val, pos.ctr.val, alternative='less')
print(test)
# now ggplot
Darts_theme = Darts_theme_constructor()
plot_df = data.frame(
group=c( rep('Pos.ctr', length(pos.ctr.val)), rep('Neg.ctr', length(neg.ctr.val)),
rep('Pos.can', length(pos.can.val)), rep('Neg.can', length(neg.can.val))),
val = c(pos.ctr.val, neg.ctr.val, pos.can.val, neg.can.val)
)
fig = ggplot(plot_df, aes(x=val)) + stat_ecdf(aes(colour=group), size=1) +
Darts_theme +
scale_colour_manual(values=c('darkgreen', 'steelblue', 'orange', 'red'), name='',
labels=c(
paste0('Predicted Unch. n=', length(neg.can.val)),
paste0('RNAseq Unch. n=', length(neg.ctr.val)),
paste0('Predicted Diff. n=', length(pos.can.val)),
paste0('RNAseq Diff. n=', length(pos.ctr.val))) ) +
theme(legend.position=c(1,0), legend.justification=c(1,0)) +
xlab('RASL |dPSI|') + ylab('Cumulative Density')
pos.can.df = dmm[pos.can.idx,]
pos.can.df = merge(info.df, pos.can.df, by='ID')
neg.can.df = dmm[neg.can.idx,]
neg.can.df = merge(info.df, neg.can.df, by='ID')
return(list(fig=fig, pos.can.df=pos.can.df, neg.can.df=neg.can.df))
}
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.1, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.9, fpr2=0.1, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.15, min_inclevel=min_inclevel)
res$fig
rc_filter = 10
meandiff_cutoff = 0.3
min_inclevel = 0
rasl.df = read_rasl(rc_filter=rc_filter)
#pdf( paste0('plots/correlation-rc_filter', rc_filter, ".pdf"),  width=4, height=4)
darts = read_darts(rasl.df, rc_filter, darts_fn='darts_out.PC3E-GS689.txt', meandiff_cutoff=meandiff_cutoff, min_inclevel=min_inclevel)
#dev.off()
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.15, min_inclevel=min_inclevel)
res$fig
plot_candidates = function(dmm, info.df, p, fpr=0.8, fpr2=0.1, min_inclevel=0.1)
{
pos.ctr.val = dmm$AbsMeanDiff[ which(dmm$Posterior_flat>0.9 & abs(dmm$IncLevelDiff)>=min_inclevel) ]
pos.ctr = ecdf(pos.ctr.val)
neg.ctr.val = dmm$AbsMeanDiff[ which(dmm$Posterior_flat<0.1) ]
neg.ctr = ecdf(neg.ctr.val)
#q.pos = quantile(p$Prior[p$Posterior_flat<0.1], p=fpr)
q.pos = quantile(dmm$Prior[dmm$Posterior_flat<=0.1], p=fpr)
q.neg = quantile(dmm$Prior[dmm$Posterior_flat<=0.1], p=fpr2)
print(q.pos)
print(q.neg)
pos.can.idx = which(
dmm$Prior >  q.pos &
abs(dmm$IncLevelDiff)>= min_inclevel&
dmm$Posterior_flat<0.9 &
dmm$Posterior_flat>0.1 )
pos.can.val = dmm$AbsMeanDiff[ pos.can.idx ]
neg.can.idx = which(
#dmm$Prior <= q.pos &
dmm$Prior <= q.neg &
abs(dmm$IncLevelDiff)>= min_inclevel &
dmm$Posterior_flat<0.9 &
dmm$Posterior_flat>0.1)
neg.can.val = dmm$AbsMeanDiff[ neg.can.idx ]
# reproducing number in manus.
test = wilcox.test(neg.can.val, pos.ctr.val, alternative='less')
print(test)
# now ggplot
Darts_theme = Darts_theme_constructor()
plot_df = data.frame(
group=c( rep('Pos.ctr', length(pos.ctr.val)), rep('Neg.ctr', length(neg.ctr.val)),
rep('Pos.can', length(pos.can.val)), rep('Neg.can', length(neg.can.val))),
val = c(pos.ctr.val, neg.ctr.val, pos.can.val, neg.can.val)
)
fig = ggplot(plot_df, aes(x=val)) + stat_ecdf(aes(colour=group), size=1) +
Darts_theme +
scale_colour_manual(values=c('darkgreen', 'steelblue', 'orange', 'red'), name='',
labels=c(
paste0('Predicted Unch. n=', length(neg.can.val)),
paste0('RNAseq Unch. n=', length(neg.ctr.val)),
paste0('Predicted Diff. n=', length(pos.can.val)),
paste0('RNAseq Diff. n=', length(pos.ctr.val))) ) +
theme(legend.position=c(1,0), legend.justification=c(1,0)) +
xlab('RASL |dPSI|') + ylab('Cumulative Density')
pos.can.df = dmm[pos.can.idx,]
pos.can.df = merge(info.df, pos.can.df, by='ID')
neg.can.df = dmm[neg.can.idx,]
neg.can.df = merge(info.df, neg.can.df, by='ID')
return(list(fig=fig, pos.can.df=pos.can.df, neg.can.df=neg.can.df))
}
plot_rc_filter = function(darts_fn='darts_out.PC3E-GS689.txt')
{
par(mfrow=c(2,2))
for(rc_filter in c(0, 5, 10, 15)) {
rasl.df = read_rasl(rc_filter=rc_filter)
darts = read_darts(rasl.df, rc_filter, darts_fn=darts_fn, cutoff=0.4)
}
}
rc_filter = 10
meandiff_cutoff = 0.3
min_inclevel = 0
rasl.df = read_rasl(rc_filter=rc_filter)
#pdf( paste0('plots/correlation-rc_filter', rc_filter, ".pdf"),  width=4, height=4)
darts = read_darts(rasl.df, rc_filter, darts_fn='darts_out.PC3E-GS689.txt', meandiff_cutoff=meandiff_cutoff, min_inclevel=min_inclevel)
#dev.off()
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.15, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_inclevel,'-rc',rc_filter,'-pnas.pdf'), useDingbats=F, width=4, height=4)
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.5, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_inclev
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.15, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_incleve
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.85, fpr2=0.15, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.2, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_inclevel,'-rc',rc_filter,'-pnas.pdf'), useDingbats=F, width=4, height=4)
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.2, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_inclevel,'-rc',rc_filter,'-pnas.pdf'), useDingbats=F, width=4, height=4)
ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_inclevel,'-rc',rc_filter,'.pdf'), useDingbats=F, width=4, height=4)
rc_filter = 5
meandiff_cutoff = 0.3
min_inclevel = 0
rasl.df = read_rasl(rc_filter=rc_filter)
#pdf( paste0('plots/correlation-rc_filter', rc_filter, ".pdf"),  width=4, height=4)
darts = read_darts(rasl.df, rc_filter, darts_fn='darts_out.PC3E-GS689.txt', meandiff_cutoff=meandiff_cutoff, min_inclevel=min_inclevel)
#dev.off()
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.2, min_inclevel=min_inclevel)
res$fig
ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_inclevel,'-rc',rc_filter,'.pdf'), useDingbats=F, width=4, height=4)
res$pos.can.df
res$pos.can.df
rc_filter = 5
meandiff_cutoff = 0.3
min_inclevel = 0
rasl.df = read_rasl(rc_filter=rc_filter)
#pdf( paste0('plots/correlation-rc_filter', rc_filter, ".pdf"),  width=4, height=4)
darts = read_darts(rasl.df, rc_filter, darts_fn='darts_out.PC3E-GS689Li.txt', meandiff_cutoff=meandiff_cutoff, min_inclevel=min_inclevel)
#dev.off()
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.2, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_inclevel,'-rc',rc_filter,'.pdf'), useDingbats=F, width=4, height=4)
rc_filter = 5
meandiff_cutoff = 0.3
min_inclevel = 0
rasl.df = read_rasl(rc_filter=rc_filter)
#pdf( paste0('plots/correlation-rc_filter', rc_filter, ".pdf"),  width=4, height=4)
darts = read_darts(rasl.df, rc_filter, darts_fn='darts_out.PC3E-GS689.txt', meandiff_cutoff=meandiff_cutoff, min_inclevel=min_inclevel)
#dev.off()
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.2, min_inclevel=min_inclevel)
res$fig
#ggsave(plot=res$fig, file=paste0('plots/candidate-min_inclevel',min_
res$pos.can.df
write.table(res$pos.can.df, file='pos_can_df.csv', sep='\t', row.names=F, quote=F)
write.table(res$neg.can.df, file='neg_can_df.csv', sep='\t', row.names=F, quote=F)
setwd('../../../manuscript/figures/fig3/RASL_candidates/')
library(ggplot2)
Darts_theme_constructor = function()
{
myTheme= theme(legend.text = element_text(size = 13),
plot.title = element_text(size=13, face="bold"), axis.title.y = element_text(size=13), axis.title.x = element_text(size=13),
axis.text.y = element_text(size=13, angle = 90, hjust = 0.5, vjust=0.5),
axis.text.x = element_text(size=13, angle=0, hjust=0.5, vjust=0.5),
panel.border = element_rect(colour = "black", fill=NA, size=1), legend.background = element_rect(fill = "transparent", colour = "transparent"))
no_border = theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
Darts_theme = myTheme + no_border
Darts_theme
}
read_rasl = function(rc_filter=10)
# read in RASL-seq counts and compute the PSI values
{
rasl.count=read.table('rasl2darts.tsv', header=T, stringsAsFactors=F)
rasl_dm = rasl.count
psi.mat = matrix(NA, nrow=nrow(rasl_dm), ncol=12)
colnames(psi.mat) = colnames(rasl_dm)[2:13]
rownames(psi.mat) = rasl_dm$ID
for(i in 1:nrow(rasl_dm))
{
for(j in 1:6)
{
count =  as.numeric(strsplit(rasl_dm[i,j+1],",")[[1]])
psi.mat[i,j] = count[1] / (count[1] + count[2]*2)
}
for(j in 7:12)
{
count =  as.numeric(strsplit(rasl_dm[i,j+1],",")[[1]])
if(sum(count, na.rm=T)<= rc_filter) next
psi.mat[i,j] = count[1] / (count[1] + count[2])
#psi.mat[i,j] = log(count[1]+0.1) - log(count[2]+0.1)
}
}
## Note: it's important to use mean.diff on PSI, instead of FoldChange or T-stat
## the reason being that such statistics would also be biased to high-exp events
mean.diff = apply(psi.mat, 1, function(x) mean(x[7:9], na.rm=T) - mean(x[10:12], na.rm=T))
psi.mat[which(is.na(psi.mat), arr.ind=T)] = 0
rasl.df = data.frame(ID=rownames(psi.mat), AbsMeanDiff=abs(mean.diff), MeanDiff=-mean.diff)
rasl.df = rasl.df[which(!is.na(rasl.df$AbsMeanDiff)),]
return(rasl.df)
}
read_darts = function(rasl.df, darts_fn='darts_out.PC3E-GS689.txt', rc_filter=10, meandiff_cutoff=0.4, min_inclevel=0.1)
# read in Darts results and concatenate to RASL
{
p = read.table(darts_fn, header=T, stringsAsFactors = F)
info.df = p[,c('ID', 'GeneSymbol', 'cassetteExon', 'flankingExon')]
p = p[,c('ID', 'IncLevel1', 'IncLevel2', 'IncLevelDiff', 'I1', 'S1', 'I2', 'S2', 'Prior', 'Posterior_flat', 'Posterior_informative')]
dmm = merge(rasl.df, p, by='ID')
# plot RASL-RNA correlation
axis.max = max(abs(dmm$MeanDiff), abs(dmm$IncLevelDiff))
plot(dmm$MeanDiff, dmm$IncLevelDiff,
main=paste0('rc>',rc_filter,
', sp=', round(cor(dmm$MeanDiff, dmm$IncLevelDiff, method='sp'),2),
', ps=', round(cor(dmm$MeanDiff, dmm$IncLevelDiff, method='p'),2)),
xlab='RASL-MeanDiff', ylab='RNAseq-IncLevelDiff',
xlim=c(-axis.max, axis.max), ylim=c(-axis.max, axis.max))
abline(v=c(-0.1, 0.1), lty=2, col='grey')
abline(h=c(-0.1, 0.1), lty=2, col='grey')
abline(0,1, col='red')
# justify cutoff
ratio=
sum(dmm$AbsMeanDiff>=meandiff_cutoff & dmm$Posterior_flat>0.9 & abs(dmm$IncLevelDiff)>min_inclevel) /
sum(dmm$AbsMeanDiff>=meandiff_cutoff & dmm$Posterior_flat>0.1 & abs(dmm$IncLevelDiff)>min_inclevel)
cat("cutoff=",meandiff_cutoff, ", RNA.sig ratio=", ratio, '\n', sep='')
# filter by cutoff
dmm = dmm[which(dmm$AbsMeanDiff<meandiff_cutoff),]
return(list(dmm=dmm, info.df=info.df, p=p))
}
plot_candidates = function(dmm, info.df, p, fpr=0.8, fpr2=0.1, min_inclevel=0.1)
{
pos.ctr.val = dmm$AbsMeanDiff[ which(dmm$Posterior_flat>0.9 & abs(dmm$IncLevelDiff)>=min_inclevel) ]
pos.ctr = ecdf(pos.ctr.val)
neg.ctr.val = dmm$AbsMeanDiff[ which(dmm$Posterior_flat<0.1) ]
neg.ctr = ecdf(neg.ctr.val)
#q.pos = quantile(p$Prior[p$Posterior_flat<0.1], p=fpr)
q.pos = quantile(dmm$Prior[dmm$Posterior_flat<=0.1], p=fpr)
q.neg = quantile(dmm$Prior[dmm$Posterior_flat<=0.1], p=fpr2)
print(q.pos)
print(q.neg)
pos.can.idx = which(
dmm$Prior >  q.pos &
abs(dmm$IncLevelDiff)>= min_inclevel&
dmm$Posterior_flat<0.9 &
dmm$Posterior_flat>0.1 )
pos.can.val = dmm$AbsMeanDiff[ pos.can.idx ]
neg.can.idx = which(
#dmm$Prior <= q.pos &
dmm$Prior <= q.neg &
abs(dmm$IncLevelDiff)>= min_inclevel &
dmm$Posterior_flat<0.9 &
dmm$Posterior_flat>0.1)
neg.can.val = dmm$AbsMeanDiff[ neg.can.idx ]
# reproducing number in manus.
test = wilcox.test(neg.can.val, pos.ctr.val, alternative='less')
print(test)
# now ggplot
Darts_theme = Darts_theme_constructor()
plot_df = data.frame(
group=c( rep('Pos.ctr', length(pos.ctr.val)), rep('Neg.ctr', length(neg.ctr.val)),
rep('Pos.can', length(pos.can.val)), rep('Neg.can', length(neg.can.val))),
val = c(pos.ctr.val, neg.ctr.val, pos.can.val, neg.can.val)
)
fig = ggplot(plot_df, aes(x=val)) + stat_ecdf(aes(colour=group), size=1) +
Darts_theme +
scale_colour_manual(values=c('darkgreen', 'steelblue', 'orange', 'red'), name='',
labels=c(
paste0('Predicted Unch. n=', length(neg.can.val)),
paste0('RNAseq Unch. n=', length(neg.ctr.val)),
paste0('Predicted Diff. n=', length(pos.can.val)),
paste0('RNAseq Diff. n=', length(pos.ctr.val))) ) +
theme(legend.position=c(1,0), legend.justification=c(1,0)) +
xlab('RASL |dPSI|') + ylab('Cumulative Density')
pos.can.df = dmm[pos.can.idx,]
pos.can.df = merge(info.df, pos.can.df, by='ID')
neg.can.df = dmm[neg.can.idx,]
neg.can.df = merge(info.df, neg.can.df, by='ID')
return(list(fig=fig, pos.can.df=pos.can.df, neg.can.df=neg.can.df))
}
plot_rc_filter = function(darts_fn='darts_out.PC3E-GS689.txt')
{
par(mfrow=c(2,2))
for(rc_filter in c(0, 5, 10, 15)) {
rasl.df = read_rasl(rc_filter=rc_filter)
darts = read_darts(rasl.df, rc_filter, darts_fn=darts_fn, cutoff=0.4)
}
}
rc_filter = 5
meandiff_cutoff = 0.3
min_inclevel = 0
rasl.df = read_rasl(rc_filter=rc_filter)
#pdf( paste0('plots/correlation-rc_filter', rc_filter, ".pdf"),  width=4, height=4)
darts = read_darts(rasl.df, rc_filter, darts_fn='darts_out.PC3E-GS689.txt', meandiff_cutoff=meandiff_cutoff, min_inclevel=min_inclevel)
#dev.off()
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.2, min_inclevel=min_inclevel)
res$fig
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.95, fpr2=0.2, min_inclevel=min_inclevel)
res = plot_candidates(darts$dmm, darts$info.df, darts$p, fpr=0.9, fpr2=0.2, min_inclevel=min_inclevel)
res$fig
setwd('../../../manuscript/figures/fig1/comparative_CRISPR_over_shRNA/')
setwd('../../../manuscript/figures/supp/3_benchmark_rep/')
library(Darts)
library(ggplot2)
library(gridExtra)
source('sim_rmats_parser.R')
# config = data.frame(
# K    = c( 6, 6, 6, 10, 10, 10 ),
# sgm  = c( 0.05, 0.05, 0.35, 0.05, 0.05, 0.35 ),
# covg = c( 50, 50, 50, 30, 30, 30 ),
# outlr= c( T, F, F, T, F, F),
# n    = 1000,
# pair = c( F, F, F, F, F, F ) )
config = data.frame(
K    = c( 6, 6, 6),
sgm  = c( 0.05, 0.05, 0.35),
covg = c( 50, 50, 50),
outlr= c( F, T, F),
n    = 100,
pair = c( F, F, F) )
roc_list = list()
pr_list = list()
i=1
res = test_sim_rdarts(
n=config$n[i],
K=config$K[i],
sigma=config$sgm[i],
covg=config$covg[i],
outlier=config$outlr[i],
is_paired=config$pair[i],
seed=12345
)
config_list = list(
n=config$n[i],
K=config$K[i],
sigma=config$sgm[i],
covg=config$covg[i],
outlier=config$outlr[i]
)
new_res = parse_rMATS(res, config_list)
roc_list[[i]] = new_res$p_roc
pr_list[[i]] = new_res$p_pr
new_res$p_pr
new_res$p_roc
plot(new_res$p_pr)
res$eval_df
new_ress$p_pr
new_res$p_pr
res$p_pr
source('make_rep_fig.R')
pdf('roc_all.new.pdf', useDingbats=F,
width=12, height=4)
do.call(grid.arrange, c(roc_list, list(ncol=3)))
dev.off()
pdf('pr_all.new.pdf', useDingbats=F,
width=12, height=4)
do.call(grid.arrange, c(pr_list, list(ncol=3)))
dev.off()
pdf('roc_all.new.pdf', useDingbats=F,
width=15, height=3)
do.call(grid.arrange, c(roc_list, list(ncol=3)))
dev.off()
pdf('pr_all.new.pdf', useDingbats=F,
width=15, height=3)
do.call(grid.arrange, c(pr_list, list(ncol=3)))
dev.off()
source('make_rep_fig.R')
setwd('../../fig2/eval_control/')
data=read.table('roc_pr_data.txt', header=T, stringsAsFactors=F)
depth = read.table('depth_data.txt', header=T, stringsAsFactors=F)
data$HepG2_depth = 0
data$K562_depth = 0
for(i in 1:nrow(data))
{
data$HepG2_depth[i] = depth[which(depth$ID==data$Comparison1[i]), 2]
data$K562_depth[i] = depth[which(depth$ID==data$Comparison2[i]), 2]
}
data$total_depth = data$HepG2_depth + data$K562_depth
plot(data$Darts.info.pr-data$Darts.flat.pr, data$total_depth,
xlab='AUPR Darts(info) - Darts(flat)',
ylab='total depth')
df1 = data.frame(diff = data$Darts.info.pr-data$Darts.flat.pr,
depth=data$total_depth)
p1 = heat_plot.2(df1$diff, df1$depth) + guides(color=F)
souce('exhaustive_plot.new.R')
source('exhaustive_plot.new.R')
data=read.table('roc_pr_data.txt', header=T, stringsAsFactors=F)
depth = read.table('depth_data.txt', header=T, stringsAsFactors=F)
data$HepG2_depth = 0
data$K562_depth = 0
for(i in 1:nrow(data))
{
data$HepG2_depth[i] = depth[which(depth$ID==data$Comparison1[i]), 2]
data$K562_depth[i] = depth[which(depth$ID==data$Comparison2[i]), 2]
}
data$total_depth = data$HepG2_depth + data$K562_depth
plot(data$Darts.info.pr-data$Darts.flat.pr, data$total_depth,
xlab='AUPR Darts(info) - Darts(flat)',
ylab='total depth')
df1 = data.frame(diff = data$Darts.info.pr-data$Darts.flat.pr,
depth=data$total_depth)
p1 = heat_plot.2(df1$diff, df1$depth) + guides(color=F)
p1
p2 = p1 + xlab('AUPR difference') + ylab('Total sequencing depth') +
scale_y_continuous(breaks=c(2*10^8, 1*10^8), labels=c('200M', '100M'))
coord_cartesian(xlim=c(0,0.08))
p2
p2 = p1 + xlab('AUPR difference') + ylab('Total sequencing depth') +
scale_y_continuous(breaks=c(2*10^8, 1*10^8), labels=c('200M', '100M')) +
coord_cartesian(xlim=c(0,0.08))
p2
p2 = p1 + xlab('AUPR difference') + ylab('Total sequencing depth') +
scale_y_continuous(breaks=c(2*10^8, 1*10^8), labels=c('200M', '100M')) +
coord_cartesian(xlim=c(0,0.08), ylim=c(5*10^8, 2.5*10^8))
p2
p2 = p1 + xlab('AUPR difference') + ylab('Total sequencing depth') +
scale_y_continuous(breaks=c(2*10^8, 1*10^8), labels=c('200M', '100M')) +
coord_cartesian(xlim=c(0,0.08), ylim=c(0.5*10^8, 2.5*10^8))
p2
p2 = p1 + xlab('AUPR difference') + ylab('Total sequencing depth') +
scale_y_continuous(breaks=c(0.5*10^8, 1.5*10^8, 2.5*10^8), labels=c('50M', '150M', '250M')) +
coord_cartesian(xlim=c(0,0.08), ylim=c(0.5*10^8, 2.5*10^8))
p2
p2 = p1 + xlab('AUPR difference') + ylab('Total sequencing depth') +
scale_y_continuous(breaks=c(0.5*10^8, 1.5*10^8, 2.5*10^8), labels=c('50M', '150M', '250M')) +
scale_x_continuous(breaks=c(0, 0.04, 0.08), labels=c('0%', '4%', '8%')) +
coord_cartesian(xlim=c(0,0.08), ylim=c(0.5*10^8, 2.5*10^8))
p2
ggsave('depth.pdf', plot=p2, width=2, height=2, useDingbats=F)
p2 = p1 + xlab('AUPR gain') + ylab('Total depth') +
scale_y_continuous(breaks=c(0.5*10^8, 1.5*10^8, 2.5*10^8), labels=c('50M', '150M', '250M')) +
scale_x_continuous(breaks=c(0, 0.04, 0.08), labels=c('0%', '4%', '8%')) +
coord_cartesian(xlim=c(0,0.08), ylim=c(0.5*10^8, 2.5*10^8))
ggsave('depth.pdf', plot=p2, width=2, height=2, useDingbats=F)
p2 = p1 + xlab('AUPR gain') + ylab('Total depth') +
scale_y_continuous(breaks=c(0.5*10^8, 1.5*10^8, 2.5*10^8), labels=c('50M', '150M', '250M'), position='right') +
scale_x_continuous(breaks=c(0, 0.04, 0.08), labels=c('0%', '4%', '8%'), potision='top') +
coord_cartesian(xlim=c(0,0.08), ylim=c(0.5*10^8, 2.5*10^8))
p2 = p1 + xlab('AUPR gain') + ylab('Total depth') +
scale_y_continuous(breaks=c(0.5*10^8, 1.5*10^8, 2.5*10^8), labels=c('50M', '150M', '250M'), position='right') +
scale_x_continuous(breaks=c(0, 0.04, 0.08), labels=c('0%', '4%', '8%'), position='top') +
coord_cartesian(xlim=c(0,0.08), ylim=c(0.5*10^8, 2.5*10^8))
p2
ggsave('depth.pdf', plot=p2, width=2, height=2, useDingbats=F)
10/0.0145
